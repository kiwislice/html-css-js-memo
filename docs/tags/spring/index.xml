<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on 學習筆記</title>
    <link>https://kiwislice.github.io/html-css-js-memo/tags/spring/</link>
    <description>Recent content in spring on 學習筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Tue, 16 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kiwislice.github.io/html-css-js-memo/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>自定義Scope</title>
      <link>https://kiwislice.github.io/html-css-js-memo/java/spring/custom-scope/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kiwislice.github.io/html-css-js-memo/java/spring/custom-scope/</guid>
      <description>先準備自定義的Scope物件(此範例為JSF的ViewScope)
import org.springframework.beans.factory.ObjectFactory; import org.springframework.beans.factory.config.Scope; public class ViewScope implements Scope { public static final String SCOPE_NAME = &amp;#34;custom_view&amp;#34;; /** 取得給定名稱物件，不存在則建立 */ @Override public Object get(String name, ObjectFactory&amp;lt;?&amp;gt; objectFactory) { Map&amp;lt;String, Object&amp;gt; viewMap = FacesContext.getCurrentInstance().getViewRoot().getViewMap(); if (viewMap.containsKey(name)) { return viewMap.get(name); } else { Object object = objectFactory.getObject(); viewMap.put(name, object); return object; } } @Override public String getConversationId() { return null; } @Override public void registerDestructionCallback(String name, Runnable callback) { } /** 移除指定物件 */ @Override public Object remove(String name) { return FacesContext.</description>
    </item>
    
  </channel>
</rss>